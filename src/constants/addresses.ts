import { Networks } from "./blockchain";

const AMBER_MAINNET = {
    GOB_ADDRESS: "0xEA48ca36933873507636e4aFD72a74f612aAf8CD",
    SGOB_ADDRESS: "0xeE27DaA4f079CcedBDCeccD64AF2D3d6F4AD1A52",
    TREASURY_ADDRESS: "0x2262944B47855F39111a6C4E801606a27Cb6eB8d",
    STAKING_ADDRESS: "0xabCEC962e357ACCc2c49C307e60565326916bdE8",
    STAKING_HELPER_ADDRESS: "0x0C7601e12FB593c963FA5398B9A41c98C08C3b6a",
    GOB_BONDING_CALC_ADDRESS: "0xE597c56a54d9c6808CD72Df6D2e192614E227e8D",
    FUSD_ADDRESS: "0x96917995f030f8fC3D8fDF40F3a6422547c877c1",
    DAO_ADDRESS: "0x624ff995Ea50F88778b96c16b650ED1CbF9A5860",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AMBER) return AMBER_MAINNET;

    throw Error("Network not supported");
};

gob 	0xEA48ca36933873507636e4aFD72a74f612aAf8CD
sgob 	0xeE27DaA4f079CcedBDCeccD64AF2D3d6F4AD1A52
flexusd 	0x96917995f030f8fC3D8fDF40F3a6422547c877c1
gob/flex lp	0xB8f30Bb16051B816D98EF29D1678C3778fe4193E
flex bond	0xe78436E676DE161F606D14B6978cdec3F07C59fa
gob flex bond	0x80c9839E77324baF16C3b7af053e7D299A1d3Be5
treasury 	0x2262944B47855F39111a6C4E801606a27Cb6eB8d
staking 	0xabCEC962e357ACCc2c49C307e60565326916bdE8
staking helper 	0x0C7601e12FB593c963FA5398B9A41c98C08C3b6a
staking warmup 	0x53CE825D1c00CB6Bc8F5871e9EAE6Da015b12b10
staking distributor	0x82a28C2c2CBedC36F84C1Db9f30a88cBB9eAf6B1
bonding calculator 	0xE597c56a54d9c6808CD72Df6D2e192614E227e8D
dao multisig 	0x624ff995Ea50F88778b96c16b650ED1CbF9A5860
